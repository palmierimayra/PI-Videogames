{"ast":null,"code":"import { FILTER_BY_ORIGIN, FILTER_BY_GENRE, ORDER_BY_NAME, ORDER_BY_RATING, LOAD_VIDEOGAMES, LOAD_GENRES } from \"./actions/types\";\nconst initialState = {\n  allVideogames: [],\n  allGenres: [],\n  videogamesOriginal: []\n};\nconst rootReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case LOAD_VIDEOGAMES:\n      {\n        return {\n          ...state,\n          allVideogames: payload,\n          videogamesOriginal: payload\n        };\n      }\n    case LOAD_GENRES:\n      {\n        return {\n          ...state,\n          allGenres: payload\n        };\n      }\n    case ORDER_BY_NAME:\n      const orderByName = [...state.videogamesOriginal].sort((a, b) => {\n        return payload === \"A\" ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name);\n      });\n      return {\n        ...state,\n        allVideogames: orderByName\n      };\n    case ORDER_BY_RATING:\n      const orderByRating = [...state.videogamesOriginal].sort((a, b) => {\n        return payload === \"A\" ? a.rating - b.rating : b.rating - a.rating;\n      });\n      return {\n        ...state,\n        allVideogames: orderByRating\n      };\n    case FILTER_BY_GENRE:\n      {\n        const genreList = [...state.videogamesOriginal].filter(videogame => videogame.genres.includes(genres) === payload);\n        return {\n          ...state,\n          allVideogames: genreList\n        };\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["FILTER_BY_ORIGIN","FILTER_BY_GENRE","ORDER_BY_NAME","ORDER_BY_RATING","LOAD_VIDEOGAMES","LOAD_GENRES","initialState","allVideogames","allGenres","videogamesOriginal","rootReducer","state","type","payload","orderByName","sort","a","b","name","localeCompare","orderByRating","rating","genreList","filter","videogame","genres","includes"],"sources":["C:/Users/Maii_/Desktop/Henry/PI/PI-Videogames/PI-Videogames/client/src/redux/reducer.js"],"sourcesContent":["import { FILTER_BY_ORIGIN, FILTER_BY_GENRE, ORDER_BY_NAME, ORDER_BY_RATING , LOAD_VIDEOGAMES, LOAD_GENRES } from \"./actions/types\";\r\n\r\nconst initialState = {\r\n  allVideogames: [],\r\n  allGenres: [],\r\n  videogamesOriginal: []\r\n};\r\n\r\nconst rootReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n\r\n    case LOAD_VIDEOGAMES: {\r\n      return {\r\n        ...state,\r\n        allVideogames: payload,\r\n        videogamesOriginal: payload,\r\n      };\r\n    }\r\n    case LOAD_GENRES: {\r\n      return {\r\n        ...state,\r\n        allGenres: payload,\r\n      };\r\n    }\r\n\r\n    case ORDER_BY_NAME:\r\n      const orderByName = [...state.videogamesOriginal].sort((a, b) => {\r\n        return payload === \"A\" ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name);\r\n      });\r\n      return {\r\n        ...state,\r\n        allVideogames: orderByName,\r\n      };\r\n\r\n    case ORDER_BY_RATING:\r\n      const orderByRating = [...state.videogamesOriginal].sort((a, b) => {\r\n        return payload === \"A\" ? a.rating - b.rating : b.rating - a.rating;\r\n      });\r\n      return {\r\n        ...state,\r\n        allVideogames: orderByRating,\r\n      };\r\n\r\ncase FILTER_BY_GENRE: {\r\n  const genreList = [...state.videogamesOriginal].filter(\r\n    (videogame) => videogame.genres.includes(genres) === payload\r\n  );\r\n  return {\r\n    ...state,\r\n    allVideogames: genreList,\r\n  };\r\n}\r\n\r\n\r\ndefault:\r\n  return {\r\n    ...state,\r\n  };\r\n}\r\n};\r\n\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,eAAe,EAAEC,aAAa,EAAEC,eAAe,EAAGC,eAAe,EAAEC,WAAW,QAAQ,iBAAiB;AAElI,MAAMC,YAAY,GAAG;EACnBC,aAAa,EAAE,EAAE;EACjBC,SAAS,EAAE,EAAE;EACbC,kBAAkB,EAAE;AACtB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAE;EAAEM,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAC/D,QAAQD,IAAI;IAEV,KAAKR,eAAe;MAAE;QACpB,OAAO;UACL,GAAGO,KAAK;UACRJ,aAAa,EAAEM,OAAO;UACtBJ,kBAAkB,EAAEI;QACtB,CAAC;MACH;IACA,KAAKR,WAAW;MAAE;QAChB,OAAO;UACL,GAAGM,KAAK;UACRH,SAAS,EAAEK;QACb,CAAC;MACH;IAEA,KAAKX,aAAa;MAChB,MAAMY,WAAW,GAAG,CAAC,GAAGH,KAAK,CAACF,kBAAkB,CAAC,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC/D,OAAOJ,OAAO,KAAK,GAAG,GAAGG,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAAC,GAAGD,CAAC,CAACC,IAAI,CAACC,aAAa,CAACH,CAAC,CAACE,IAAI,CAAC;MACtF,CAAC,CAAC;MACF,OAAO;QACL,GAAGP,KAAK;QACRJ,aAAa,EAAEO;MACjB,CAAC;IAEH,KAAKX,eAAe;MAClB,MAAMiB,aAAa,GAAG,CAAC,GAAGT,KAAK,CAACF,kBAAkB,CAAC,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACjE,OAAOJ,OAAO,KAAK,GAAG,GAAGG,CAAC,CAACK,MAAM,GAAGJ,CAAC,CAACI,MAAM,GAAGJ,CAAC,CAACI,MAAM,GAAGL,CAAC,CAACK,MAAM;MACpE,CAAC,CAAC;MACF,OAAO;QACL,GAAGV,KAAK;QACRJ,aAAa,EAAEa;MACjB,CAAC;IAEP,KAAKnB,eAAe;MAAE;QACpB,MAAMqB,SAAS,GAAG,CAAC,GAAGX,KAAK,CAACF,kBAAkB,CAAC,CAACc,MAAM,CACnDC,SAAS,IAAKA,SAAS,CAACC,MAAM,CAACC,QAAQ,CAACD,MAAM,CAAC,KAAKZ,OACvD,CAAC;QACD,OAAO;UACL,GAAGF,KAAK;UACRJ,aAAa,EAAEe;QACjB,CAAC;MACH;IAGA;MACE,OAAO;QACL,GAAGX;MACL,CAAC;EACH;AACA,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}