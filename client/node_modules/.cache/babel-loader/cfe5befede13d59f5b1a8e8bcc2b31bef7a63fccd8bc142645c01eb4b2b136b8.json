{"ast":null,"code":"import { FILTER_BY_GENRE_AND_ORIGIN, CLEAR_ALL, VIDEOGAME_BY_ID, FILTER_BY_ORIGIN, FILTER_BY_GENRE, ORDER_BY_NAME, ORDER_BY_RATING, LOAD_VIDEOGAMES, LOAD_GENRES, CREATE_VIDEOGAME, SEARCH_VIDEOGAME } from \"./actions/types\";\nconst initialState = {\n  allVideogames: [],\n  allGenres: [],\n  videogamesOriginal: [],\n  createVideogame: null,\n  videogameById: [],\n  filteredVideogames: []\n};\nconst rootReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case LOAD_VIDEOGAMES:\n      {\n        return {\n          ...state,\n          allVideogames: payload,\n          videogamesOriginal: payload\n        };\n      }\n    case LOAD_GENRES:\n      {\n        return {\n          ...state,\n          allGenres: payload\n        };\n      }\n    case VIDEOGAME_BY_ID:\n      {\n        return {\n          ...state,\n          videogameById: payload\n        };\n      }\n    case CREATE_VIDEOGAME:\n      {\n        return {\n          ...state,\n          createVideogame: payload\n        };\n      }\n    case SEARCH_VIDEOGAME:\n      {\n        return {\n          ...state,\n          allVideogames: payload\n        };\n      }\n    case ORDER_BY_NAME:\n      const orderByName = [...state.allVideogames].sort((a, b) => {\n        return payload === \"A\" ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name);\n      });\n      return {\n        ...state,\n        allVideogames: orderByName\n      };\n    case ORDER_BY_RATING:\n      const orderByRating = [...state.allVideogames].sort((a, b) => {\n        return payload === \"A\" ? a.rating - b.rating : b.rating - a.rating;\n      });\n      return {\n        ...state,\n        allVideogames: orderByRating\n      };\n    case FILTER_BY_GENRE:\n      {\n        let filteredVideogames = [];\n        if (payload === null) {\n          filteredVideogames = [...state.videogamesOriginal];\n        } else {\n          filteredVideogames = [...state.videogamesOriginal].filter(videogame => videogame.genres && videogame.genres.includes(payload));\n        }\n        return {\n          ...state,\n          allVideogames: filteredVideogames\n        };\n      }\n    case FILTER_BY_ORIGIN:\n      {\n        let filteredByOrigin = [];\n        if (payload === null) {\n          filteredByOrigin = [...state.videogamesOriginal];\n        } else {\n          filteredByOrigin = [...state.videogamesOriginal].filter(videogame => videogame.source && videogame.source.includes(payload));\n        }\n        return {\n          ...state,\n          allVideogames: filteredByOrigin\n        };\n      }\n    case FILTER_BY_GENRE_AND_ORIGIN:\n      const {\n        genre,\n        origin\n      } = payload;\n      const allVideogames = state.allVideogames;\n      const filteredVideogames = allVideogames.filter(game => {\n        const genreMatch = !genre || game.genres.includes(genre);\n        const originMatch = !origin || game.source === origin;\n        return genreMatch && originMatch;\n      });\n    case CLEAR_ALL:\n      {\n        return {\n          ...state,\n          allVideogames: [],\n          videogamesOriginal: [],\n          videogameById: []\n        };\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["FILTER_BY_GENRE_AND_ORIGIN","CLEAR_ALL","VIDEOGAME_BY_ID","FILTER_BY_ORIGIN","FILTER_BY_GENRE","ORDER_BY_NAME","ORDER_BY_RATING","LOAD_VIDEOGAMES","LOAD_GENRES","CREATE_VIDEOGAME","SEARCH_VIDEOGAME","initialState","allVideogames","allGenres","videogamesOriginal","createVideogame","videogameById","filteredVideogames","rootReducer","state","type","payload","orderByName","sort","a","b","name","localeCompare","orderByRating","rating","filter","videogame","genres","includes","filteredByOrigin","source","genre","origin","game","genreMatch","originMatch"],"sources":["C:/Users/Maii_/Desktop/Henry/PI/PI-Videogames/PI-Videogames/client/src/redux/reducer.js"],"sourcesContent":["import { FILTER_BY_GENRE_AND_ORIGIN, CLEAR_ALL, VIDEOGAME_BY_ID, FILTER_BY_ORIGIN, FILTER_BY_GENRE, ORDER_BY_NAME, ORDER_BY_RATING , LOAD_VIDEOGAMES, LOAD_GENRES, CREATE_VIDEOGAME, SEARCH_VIDEOGAME } from \"./actions/types\";\r\n\r\nconst initialState = {\r\n  allVideogames: [],\r\n  allGenres: [],\r\n  videogamesOriginal: [],\r\n  createVideogame: null,\r\n  videogameById: [],\r\n  filteredVideogames: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n\r\n    case LOAD_VIDEOGAMES: {\r\n      return {\r\n        ...state,\r\n        allVideogames: payload,\r\n        videogamesOriginal: payload,\r\n      };\r\n    }\r\n    \r\n    case LOAD_GENRES: {\r\n      return {\r\n        ...state,\r\n        allGenres: payload,\r\n      };\r\n    }\r\n\r\n    case VIDEOGAME_BY_ID: {\r\n      return {\r\n        ...state,\r\n        videogameById: payload,\r\n      };\r\n    }\r\n\r\n    case CREATE_VIDEOGAME: {\r\n      return {\r\n        ...state,\r\n        createVideogame: payload,\r\n      }\r\n    }\r\n\r\n    case SEARCH_VIDEOGAME: {\r\n      return {\r\n        ...state,\r\n        allVideogames: payload,\r\n      }\r\n    }\r\n\r\n    case ORDER_BY_NAME:\r\n      const orderByName = [...state.allVideogames].sort((a, b) => {\r\n        return payload === \"A\" ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name);\r\n      });\r\n      return {\r\n        ...state,\r\n        allVideogames: orderByName,\r\n      };\r\n\r\n    case ORDER_BY_RATING:\r\n      const orderByRating = [...state.allVideogames].sort((a, b) => {\r\n        return payload === \"A\" ? a.rating - b.rating : b.rating - a.rating;\r\n      });\r\n      return {\r\n        ...state,\r\n        allVideogames: orderByRating,\r\n      };\r\n\r\n      case FILTER_BY_GENRE: {      \r\n\r\n        let filteredVideogames= [];\r\n\r\n         if(payload===null) {\r\n          filteredVideogames = [...state.videogamesOriginal];\r\n         } else {\r\n          filteredVideogames = [...state.videogamesOriginal].filter((videogame) => videogame.genres && videogame.genres.includes(payload));\r\n         }\r\n\r\n        return {\r\n          ...state,\r\n          allVideogames: filteredVideogames,\r\n        };\r\n      }\r\n      \r\n      case FILTER_BY_ORIGIN: {      \r\n\r\n        let filteredByOrigin = [];\r\n\r\n        if(payload===null) {\r\n          filteredByOrigin = [...state.videogamesOriginal];\r\n        } else {\r\n          filteredByOrigin = [...state.videogamesOriginal].filter((videogame) => videogame.source && videogame.source.includes(payload));\r\n        }\r\n\r\n       return {\r\n         ...state,\r\n         allVideogames: filteredByOrigin,\r\n       };\r\n     }\r\n    \r\n     case FILTER_BY_GENRE_AND_ORIGIN:\r\n      const { genre, origin } = payload;\r\n      const allVideogames = state.allVideogames;\r\n      const filteredVideogames = allVideogames.filter((game) => {\r\n        const genreMatch = !genre || game.genres.includes(genre);\r\n        const originMatch = !origin || game.source === origin;\r\n        return genreMatch && originMatch;\r\n      });\r\n\r\n     case CLEAR_ALL: {\r\n      return {\r\n            ...state,\r\n            allVideogames: [],\r\n            videogamesOriginal: [],\r\n            videogameById: [],\r\n          }\r\n      }\r\n\r\ndefault:\r\n  return {\r\n    ...state,\r\n  };\r\n}\r\n};\r\n\r\nexport default rootReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}